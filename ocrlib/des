        **********************拍摄身份证*********************************
        /**身份证
         * 开启相机
         * 参数1: 上下文
         * 参数2: 请求码,用于onActivityResult
         */
        //1开始拍照获取身份证
        CameraUtil.getInstance().startCamera(this, 100);
        //2身份证的回调
         @Override
         protected void onActivityResult(int requestCode, int resultCode, Intent data) {
                super.onActivityResult(requestCode, resultCode, data);
                if(data == null){
                    return;
                }
                if (requestCode == 100) {
                    img_path = data.getStringExtra(CameraConstants.IntentKeyFilePath);
                    updateImageView();
                }
            }

        ***********************开启活体检测********************************
            1 活体检测的调用
            LivingManger livingManger = new LivingManger(Context livingContext, String cardname, String cardid, String credentialcode, String customercode, String Type, String imageurl, new LivingResult() {
                      @Override
                      public void livingSucceed() {
                      //成功的结果
                           Log.i("ssalslaklslksaklsakl", "成功了");
                       }

                      @Override
                      public void livingFailed() {
                      // 失败的结果
                        }
                   });

           2 开始启动检测
            livingManger.startLivingMatch();


           3 在页面的destory里面需要进行销毁资源
            livingManger.destory();

              ***********************公用的开启活体检测********************************
                        1 活体检测的调用
                        LivingManger livingManger = new LivingManger(baseActivity, new LivingResult() {
                                  @Override
                                  public void livingSucceed() {
                                  //成功的结果
                                       Log.i("ssalslaklslksaklsakl", "成功了");
                                   }

                                  @Override
                                  public void livingFailed() {
                                  // 失败的结果
                                    }
                               });

                       2 开始启动检测
                        livingManger.startLivingMatch();


                       3 在页面的destory里面需要进行销毁资源
                        livingManger.destory();



        ************************开启拍摄person*****************************************
         baseActivity.startActivity(new Intent(baseActivity, FacePictureActivity.class));
         返回的通知
         RxBus.get().post(RxConstant.COMPLIANCE_FACEUP, new FaceInf(remotpath,localpath,"activityName"));

        ************************开启拍摄person进行person对比 person对比锁*****************************************
         baseActivity.startActivity(new Intent(baseActivity, FacePictureActivity.class).putExtra(FacePictureActivity.TAG_NEED_PERSON,true));
         返回的通知 0代表成功 1代表失败  int值
         RxBus.get().post(RxConstant.COMPLIANCE_PERSON_COMPARE, new PersonCompare(0,"activityName"));


      最新添加activity的tage需要修改场景
      1进入FacePictureActivity页面时候需要在intent里面添加 key为FacePictureActivity.PAGE_TAG的string类型的标识
      监听的时候需要修改的监听bean类型 1只获取照片的回调 原来里面的回调bean为FaceInf  多一个字段pageTage  2获取person对比 原来的回调类型是int现在的类型修改为PersonCompare



