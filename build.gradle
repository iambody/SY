buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'me.tatarka:gradle-retrolambda:3.3.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.jakewharton:butterknife-gradle-plugin:8.4.0'

//        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.0'
        classpath 'com.chenenyu.router:gradle-plugin:latest.integration'
        classpath 'io.fabric.tools:gradle:1.24.2'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://github.com/500px/500px-android-blur/raw/master/releases/' }
        maven { url "https://jitpack.io" }
        flatDir {
            // 由于Library module中引用了 ipay 库的 aar，在多 module 的情况下，
            // 其他的module编译会报错，所以需要在所有工程的repositories
            // 下把mall module中的libs目录添加到依赖关系中
            //TOdo
            dirs file(rootDir.absolutePath+'/mall/libs')
//            dirs project(':ocrlib').file('libs'),project(':mall').file('libs')
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
def keystorePropertiesFile = rootProject.file("gradle.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
ext {
    compileSdkVersion = 24
    buildToolsVersion = "25.0.0"
    minSdkVersion = 17
    targetSdkVersion = 23
    databaseName = "sxydb.db";
    databaseVer = 1;

    support_v4_version = '24.1.0'
    android_need_version = '25.0.1'
    okhttp_need_version = '3.5.0'
    okio_need_version = '1.11.0'
    retrofit_need_version = '2.1.0'
    rxlifecycle_need_version = '1.0'
    butterknife_need_version = '8.4.0'
    gson_need_version = '2.4'
    recycleanim_need_version = '2.0.0'
    rxandroid_need_version = '1.2.0'
    rxjava_need_version = 'x.y.z'
    glide_need_version = '3.7.0'
    okGlide_need_version = '1.4.0@aar'
    glideAnim_need_version = '2.0.0'
    greenDAO_need_version = '3.2.0'
    floatbar_need_version = '1.0.2'
    avilib_need_version = '1.0.0'
    recRefLayout_need_version = '2.0.3'
    okGo_need_version = '2.1.4'
    okGoRx_need_version = '0.1.2'
    okGoServer_need_version = '1.1.3'
    fbRebound_need_version = '0.3.8'
    actvityTr_need_version = '1.3.2'
    robolectric_need_version = '3.1.4'
    recyclerview_version = '24.1.1'
    leakcanary_version = '1.5.1'
    magicindicator_version = '1.5.0'
    pdf_viewer_version = '1.4.0'
    xtablayout_version = '1.1.1'
    testRunner = 'android.support.test.runner.AndroidJUnitRunner'
    testC = '4.12'
    leakcanary_version = '1.5.1'
    magicindicator_version = '1.5.0'



    webview_java_script_bridge = '1.0.4'
    routerVersion = "1.1.0"
    compilerVersion = "0.6.0"

    if (project.hasProperty('versionCode')) {
        versionCode = Integer.parseInt(versionCode)
    } else {
        versionCode = keystoreProperties['versionCode'] as int
    }
    if (project.hasProperty('versionName')) {
        versionName = versionName
    } else {
        versionName = keystoreProperties['versionName']
    }
    if (project.hasProperty('baseUrl')) {
        baseUrl = baseUrl
    } else {
        baseUrl = keystoreProperties['baseUrl']
    }
    if (project.hasProperty('umengKey')) {
        umengKey = umengKey
    } else {
        umengKey = keystoreProperties['umengKey']
    }
    if (project.hasProperty('rongCloud')) {
        rongCloud = rongCloud
    } else {
        rongCloud = keystoreProperties['rongCloud']
    }
}